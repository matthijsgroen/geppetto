"use strict";(self.webpackChunkgeppetto=self.webpackChunkgeppetto||[]).push([[128],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return d}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=a.createContext({}),p=function(e){var n=a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=p(e.components);return a.createElement(u.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=p(t),d=r,g=m["".concat(u,".").concat(d)]||m[d]||c[d]||o;return t?a.createElement(g,i(i({ref:n},s),{},{components:t})):a.createElement(g,i({ref:n},s))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var u in n)hasOwnProperty.call(n,u)&&(l[u]=n[u]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=t[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9443:function(e,n,t){var a=(0,t(7294).createContext)(void 0);n.Z=a},6958:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return b},default:function(){return w},frontMatter:function(){return v},metadata:function(){return h},toc:function(){return k}});var a=t(7462),r=t(3366),o=t(7294),i=t(3905),l=t(2389),u=t(9443);var p=function(){var e=(0,o.useContext)(u.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},s=t(3039),c=t(6010),m="tabItem_1uMI";function d(e){var n,t,a,r=e.lazy,i=e.block,l=e.defaultValue,u=e.values,d=e.groupId,g=e.className,y=o.Children.map(e.children,(function(e){if((0,o.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=u?u:y.map((function(e){var n=e.props;return{value:n.value,label:n.label}})),v=(0,s.lx)(f,(function(e,n){return e.value===n.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var b=null===l?l:null!=(n=null!=l?l:null==(t=y.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(a=y[0])?void 0:a.props.value;if(null!==b&&!f.some((function(e){return e.value===b})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+b+'" but none of its children has the corresponding value. Available values are: '+f.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var h=p(),k=h.tabGroupChoices,T=h.setTabGroupChoices,w=(0,o.useState)(b),x=w[0],N=w[1],I=[],j=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=d){var C=k[d];null!=C&&C!==x&&f.some((function(e){return e.value===C}))&&N(C)}var O=function(e){var n=e.currentTarget,t=I.indexOf(n),a=f[t].value;a!==x&&(j(n),N(a),null!=d&&T(d,a))},E=function(e){var n,t=null;switch(e.key){case"ArrowRight":var a=I.indexOf(e.currentTarget)+1;t=I[a]||I[0];break;case"ArrowLeft":var r=I.indexOf(e.currentTarget)-1;t=I[r]||I[I.length-1]}null==(n=t)||n.focus()};return o.createElement("div",{className:"tabs-container"},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,c.Z)("tabs",{"tabs--block":i},g)},f.map((function(e){var n=e.value,t=e.label;return o.createElement("li",{role:"tab",tabIndex:x===n?0:-1,"aria-selected":x===n,className:(0,c.Z)("tabs__item",m,{"tabs__item--active":x===n}),key:n,ref:function(e){return I.push(e)},onKeyDown:E,onFocus:O,onClick:O},null!=t?t:n)}))),r?(0,o.cloneElement)(y.filter((function(e){return e.props.value===x}))[0],{className:"margin-vert--md"}):o.createElement("div",{className:"margin-vert--md"},y.map((function(e,n){return(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==x})}))))}function g(e){var n=(0,l.Z)();return o.createElement(d,(0,a.Z)({key:String(n)},e))}var y=function(e){var n=e.children,t=e.hidden,a=e.className;return o.createElement("div",{role:"tabpanel",hidden:t,className:a},n)},f=["components"],v={sidebar_position:1},b="Using the player",h={unversionedId:"using-player/player",id:"using-player/player",isDocsHomePage:!1,title:"Using the player",description:"The Geppetto Player is a Typescript library you can use in your web project to embed animations on your website.",source:"@site/docs/using-player/player.md",sourceDirName:"using-player",slug:"/using-player/player",permalink:"/beta/docs/using-player/player",editUrl:"https://github.com/matthijsgroen/geppetto/edit/gh-pages/website/docs/using-player/player.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Animation screen",permalink:"/beta/docs/creating-animation/animation"},next:{title:"API Reference",permalink:"/beta/docs/using-player/api"}},k=[{value:"Install Player",id:"install-player",children:[],level:2},{value:"Setup WebGL",id:"setup-webgl",children:[],level:2},{value:"Adding an animation",id:"adding-an-animation",children:[],level:2},{value:"Setting up a render loop",id:"setting-up-a-render-loop",children:[],level:2},{value:"Controlling an animation",id:"controlling-an-animation",children:[],level:2}],T={toc:k};function w(e){var n=e.components,t=(0,r.Z)(e,f);return(0,i.kt)("wrapper",(0,a.Z)({},T,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"using-the-player"},"Using the player"),(0,i.kt)("p",null,"The Geppetto Player is a Typescript library you can use in your web project to embed animations on your website."),(0,i.kt)("h2",{id:"install-player"},"Install Player"),(0,i.kt)("p",null,"You can install the library using the ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/geppetto-player"},(0,i.kt)("inlineCode",{parentName:"a"},"geppetto-player"))," npm package."),(0,i.kt)(g,{groupId:"package-manager",mdxType:"Tabs"},(0,i.kt)(y,{value:"npm",label:"npm",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"npm install geppetto-player\n"))),(0,i.kt)(y,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"yarn add geppetto-player\n")))),(0,i.kt)("h2",{id:"setup-webgl"},"Setup WebGL"),(0,i.kt)("p",null,"First you need to setup a canvas environment.\nYou can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"setupWebGL")," method to help you with that."),(0,i.kt)(g,{groupId:"coding-language",mdxType:"Tabs"},(0,i.kt)(y,{value:"ts",label:"Typescript",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { setupWebGL } from "geppetto-player";\n\nconst canvas = document.getElementById("theatre") as HTMLCanvasElement;\nconst player = setupWebGL(canvas);\n'))),(0,i.kt)(y,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'import { setupWebGL } from "geppetto-player";\n\nconst canvas = document.getElementById("theatre");\nconst player = setupWebGL(canvas);\n')))),(0,i.kt)("p",null,"This will initialise the ",(0,i.kt)("inlineCode",{parentName:"p"},"WebGL")," context of the ",(0,i.kt)("inlineCode",{parentName:"p"},"<canvas />")," element, and return a player to setup Geppetto animations."),(0,i.kt)("p",null,"With the player you can now add animations to the player. You can setup and use multiple animations in a single player."),(0,i.kt)("h2",{id:"adding-an-animation"},"Adding an animation"),(0,i.kt)("p",null,"To add the animation, you need to convert the animation ",(0,i.kt)("inlineCode",{parentName:"p"},".json")," file created with the studio application to a format optimized for playback."),(0,i.kt)(g,{groupId:"coding-language",mdxType:"Tabs"},(0,i.kt)(y,{value:"ts",label:"Typescript",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { prepareAnimation, ImageDefinition } from "geppetto-player";\nimport animationData from "my-animation-file.json";\n\nconst preparedAnimation = prepareAnimation(\n  animationData as unknown as ImageDefinition\n);\n'))),(0,i.kt)(y,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'import { prepareAnimation, ImageDefinition } from "geppetto-player";\nimport animationData from "my-animation-file.json";\n\nconst preparedAnimation = prepareAnimation(animationData);\n')))),(0,i.kt)("p",null,"You also need to provide your texture using an ",(0,i.kt)("inlineCode",{parentName:"p"},"Image")," element in javascript."),(0,i.kt)("p",null,"You can load your texture with the example code provided here:"),(0,i.kt)(g,{groupId:"coding-language",mdxType:"Tabs"},(0,i.kt)(y,{value:"ts",label:"Typescript",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'const loadTexture = async (url: string): Promise<HTMLImageElement> =>\n  new Promise((resolve) => {\n    const image = new Image();\n    image.crossOrigin = "anonymous";\n    image.src = url;\n    image.onload = () => resolve(image);\n  });\n\nconst animationTexture = await loadTexture("./url-of-texture.png");\n'))),(0,i.kt)(y,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const loadTexture = async (url) =>\n  new Promise((resolve) => {\n    const image = new Image();\n    image.crossOrigin = "anonymous";\n    image.src = url;\n    image.onload = () => resolve(image);\n  });\n\nconst animationTexture = await loadTexture("./url-of-texture.png");\n')))),(0,i.kt)("p",null,"You can now add your animation to the player, receiving an ",(0,i.kt)("inlineCode",{parentName:"p"},"AnimationControl")," object to control your animation."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const animationControl = player.addAnimation(\n  preparedAnimation,\n  animationTexture,\n  0\n);\n")),(0,i.kt)("h2",{id:"setting-up-a-render-loop"},"Setting up a render loop"),(0,i.kt)("p",null,"In order to make the animation work, you should create a render loop that renders the animation for each frame."),(0,i.kt)("p",null,"The reason we let you setup this loop, is that you will have more control over it."),(0,i.kt)("p",null,"For the animation above, this loop would be simple:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const renderFrame = () => {\n  player.render(); // Clear the canvas\n  animationControl.render(); // Render a frame of my first animation\n  // ... for multiple animations, do a render() call for each animationControl\n\n  window.requestAnimationFrame(renderFrame);\n};\n\nwindow.requestAnimationFrame(renderFrame);\n")),(0,i.kt)("h2",{id:"controlling-an-animation"},"Controlling an animation"),(0,i.kt)("p",null,"With the animation now visible, you can start animation tracks, listen to events, or do real-time control manipulations."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'animationControl.startTrack("MyAnimation");\nanimationControl.setControlValue("MyControl", 0.65);\n')))}w.isMDXComponent=!0}}]);