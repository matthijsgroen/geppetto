"use strict";(self.webpackChunkgeppetto=self.webpackChunkgeppetto||[]).push([[961],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return c}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),d=s(n),c=i,k=d["".concat(p,".").concat(c)]||d[c]||u[c]||r;return n?a.createElement(k,l(l({ref:t},m),{},{components:n})):a.createElement(k,l({ref:t},m))}));function c(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var s=2;s<r;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9605:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return m},default:function(){return d}});var a=n(7462),i=n(3366),r=(n(7294),n(3905)),l=["components"],o={sidebar_position:2,comment:"This file is automatically generated using `yarn write-api-doc`"},p="API Reference",s={unversionedId:"using-player/api",id:"using-player/api",isDocsHomePage:!1,title:"API Reference",description:"The api has a only a few methods to get you started:",source:"@site/docs/using-player/api.md",sourceDirName:"using-player",slug:"/using-player/api",permalink:"/beta/docs/using-player/api",editUrl:"https://github.com/matthijsgroen/geppetto/edit/gh-pages/website/docs/using-player/api.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,comment:"This file is automatically generated using `yarn write-api-doc`"},sidebar:"tutorialSidebar",previous:{title:"Using the player",permalink:"/beta/docs/using-player/player"},next:{title:"Animation playground",permalink:"/beta/docs/playground"}},m=[{value:"setupWebGL",id:"setupwebgl",children:[{value:"Arguments",id:"arguments",children:[],level:4}],level:2},{value:"createPlayer",id:"createplayer",children:[{value:"Arguments",id:"arguments-1",children:[],level:4}],level:2},{value:"prepareAnimation",id:"prepareanimation",children:[{value:"Arguments",id:"arguments-2",children:[],level:4}],level:2},{value:"GeppettoPlayer",id:"geppettoplayer",children:[{value:"destroy()",id:"geppettoplayer-destroy",children:[],level:3},{value:"addAnimation(animation, image, textureUnit, options)",id:"geppettoplayer-addanimation",children:[{value:"Arguments",id:"arguments-3",children:[],level:4}],level:3},{value:"render()",id:"geppettoplayer-render",children:[],level:3}],level:2},{value:"AnimationControls",id:"animationcontrols",children:[{value:"destroy()",id:"animationcontrols-destroy",children:[],level:3},{value:"getControlValue(controlName)",id:"animationcontrols-getcontrolvalue",children:[{value:"Arguments",id:"arguments-4",children:[],level:4}],level:3},{value:"onEvent(callback)",id:"animationcontrols-onevent",children:[{value:"Arguments",id:"arguments-5",children:[],level:4}],level:3},{value:"onTrackStopped(callback)",id:"animationcontrols-ontrackstopped",children:[{value:"Arguments",id:"arguments-6",children:[],level:4}],level:3},{value:"render()",id:"animationcontrols-render",children:[],level:3},{value:"setControlValue(controlName, value)",id:"animationcontrols-setcontrolvalue",children:[{value:"Arguments",id:"arguments-7",children:[],level:4}],level:3},{value:"setLooping(loop, trackName)",id:"animationcontrols-setlooping",children:[{value:"Arguments",id:"arguments-8",children:[],level:4}],level:3},{value:"setPanning(panX, panY)",id:"animationcontrols-setpanning",children:[{value:"Arguments",id:"arguments-9",children:[],level:4}],level:3},{value:"setZIndex(zIndex)",id:"animationcontrols-setzindex",children:[{value:"Arguments",id:"arguments-10",children:[],level:4}],level:3},{value:"setZoom(zoom)",id:"animationcontrols-setzoom",children:[{value:"Arguments",id:"arguments-11",children:[],level:4}],level:3},{value:"startTrack(trackName, options)",id:"animationcontrols-starttrack",children:[{value:"Arguments",id:"arguments-12",children:[],level:4}],level:3},{value:"stopTrack(trackName)",id:"animationcontrols-stoptrack",children:[{value:"Arguments",id:"arguments-13",children:[],level:4}],level:3}],level:2}],u={toc:m};function d(e){var t=e.components,n=(0,i.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"api-reference"},"API Reference"),(0,r.kt)("p",null,"The api has a only a few methods to get you started:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"use ",(0,r.kt)("a",{parentName:"li",href:"#setupwebgl"},(0,r.kt)("inlineCode",{parentName:"a"},"setupWebGL"))," or ",(0,r.kt)("a",{parentName:"li",href:"#createplayer"},(0,r.kt)("inlineCode",{parentName:"a"},"createPlayer"))," to\ninitialize the canvas and get an ",(0,r.kt)("a",{parentName:"li",href:"#geppettoplayer"},(0,r.kt)("inlineCode",{parentName:"a"},"GeppettoPlayer"))," object."),(0,r.kt)("li",{parentName:"ul"},"use ",(0,r.kt)("a",{parentName:"li",href:"#prepareanimation"},(0,r.kt)("inlineCode",{parentName:"a"},"prepareAnimation"))," to convert your animation to use with\n",(0,r.kt)("a",{parentName:"li",href:"#geppettoplayer-addanimation"},(0,r.kt)("inlineCode",{parentName:"a"},"GeppettoPlayer.addAnimation")),"."),(0,r.kt)("li",{parentName:"ul"},"use the ",(0,r.kt)("a",{parentName:"li",href:"#animationcontrol"},(0,r.kt)("inlineCode",{parentName:"a"},"AnimationControl"))," (as return of\n",(0,r.kt)("a",{parentName:"li",href:"#geppettoplayer-addanimation"},(0,r.kt)("inlineCode",{parentName:"a"},"GeppettoPlayer.addAnimation")),") to control your animation.")),(0,r.kt)("h2",{id:"setupwebgl"},"setupWebGL"),(0,r.kt)("p",null,"Initializes the WebGL Context of a provided context. Configures the context and returns\na GeppettoPlayer bound to this element."),(0,r.kt)("p",null,"Use this method if you only render Geppetto Animations in your Canvas.\nUse ",(0,r.kt)("a",{parentName:"p",href:"#createplayer"},"createPlayer")," if you want your own control over the canvas configuration"),(0,r.kt)("p",null,"Returns ",(0,r.kt)("inlineCode",{parentName:"p"},"GeppettoPlayer")),(0,r.kt)("h4",{id:"arguments"},"Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"element")," ",(0,r.kt)("inlineCode",{parentName:"li"},"HTMLCanvasElement")," the Canvas DOM element that is not yet initialized with a context")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"const setupWebGL = (element: HTMLCanvasElement): GeppettoPlayer;\n")),(0,r.kt)("h2",{id:"createplayer"},"createPlayer"),(0,r.kt)("p",null,"Initializes a player to display in an existing WebGL Environment.\nUse this function to create a player if you want to have full control over the\nrendering process (possibly to combine with other render code)."),(0,r.kt)("p",null,"Returns ",(0,r.kt)("inlineCode",{parentName:"p"},"GeppettoPlayer")),(0,r.kt)("h4",{id:"arguments-1"},"Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"element")," ",(0,r.kt)("inlineCode",{parentName:"li"},"HTMLCanvasElement")," the Canvas DOM element containing a WebGL Context")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"const createPlayer = (element: HTMLCanvasElement): GeppettoPlayer;\n")),(0,r.kt)("h2",{id:"prepareanimation"},"prepareAnimation"),(0,r.kt)("p",null,"Convert the JSON based input animation file into a preprocessed list of buffers to place into WebGL"),(0,r.kt)("p",null,"Returns ",(0,r.kt)("inlineCode",{parentName:"p"},"PreparedImageDefinition")),(0,r.kt)("h4",{id:"arguments-2"},"Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"imageDefinition")," ",(0,r.kt)("inlineCode",{parentName:"li"},"ImageDefinition")," ")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"const prepareAnimation = (imageDefinition: ImageDefinition): PreparedImageDefinition;\n")),(0,r.kt)("h2",{id:"geppettoplayer"},"GeppettoPlayer"),(0,r.kt)("p",null,"A player to add Gepetto animations to."),(0,r.kt)("h3",{id:"geppettoplayer-destroy"},"destroy()"),(0,r.kt)("p",null,"Destroys all animations added to this player."),(0,r.kt)("p",null,"Returns ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h3",{id:"geppettoplayer-addanimation"},"addAnimation(animation, image, textureUnit, ","[options]",")"),(0,r.kt)("p",null,"Add a Geppetto animation to the player."),(0,r.kt)("p",null,"Returns ",(0,r.kt)("inlineCode",{parentName:"p"},"AnimationControls")),(0,r.kt)("h4",{id:"arguments-3"},"Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"animation")," ",(0,r.kt)("inlineCode",{parentName:"li"},"PreparedImageDefinition")," an animation prepared with ",(0,r.kt)("a",{parentName:"li",href:"#prepareanimation"},"prepareAnimation"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"image")," ",(0,r.kt)("inlineCode",{parentName:"li"},"HTMLImageElement")," a HTML Image element with loaded url to use as texture."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"textureUnit")," ",(0,r.kt)("inlineCode",{parentName:"li"},"number")," The texture unit to use you can use ",(0,r.kt)("inlineCode",{parentName:"li"},"0")," for your first animation,\n",(0,r.kt)("inlineCode",{parentName:"li"},"1")," for your second, etc."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"options")," ",(0,r.kt)("inlineCode",{parentName:"li"},"Partial<AnimationOptions>")," ")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"\n/**\n * Options to set directly when adding an animation.\n **/\ninterface AnimationOptions {\n  \n  /**\n   * Horizontal position of image in canvas. `0` = center, `-1` = left, `1` = right.\n   * @default 0.0\n   **/\n  panX: number;\n  \n  /**\n   * Vertical position of image in canvas. `0` = center, `-1` = bottom, `1` = top.\n   * @default 0.0\n   **/\n  panY: number;\n  \n  /**\n   * Adds a stacking order to the rendering elements, this helps when\n   * stacking multiple animations on top of eachother.\n   * @default 0\n   **/\n  zIndex: number;\n  \n  /**\n   * Zoom level. `1` = 100%, `1.5` is 150%, `0.5` = 50% zoom.\n   * @default 1.0\n   **/\n  zoom: number;\n};\n")),(0,r.kt)("h3",{id:"geppettoplayer-render"},"render()"),(0,r.kt)("p",null,"Clears the canvas. Use this when you created the player with ",(0,r.kt)("a",{parentName:"p",href:"#setupwebgl"},"setupWebGL"),".\nIf you want to control the rendering process (and the clearing of the canvas) yourself,\nskip the call to this method in your render cycle."),(0,r.kt)("p",null,"Returns ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h2",{id:"animationcontrols"},"AnimationControls"),(0,r.kt)("p",null,"Options to control the animation, start animation tracks, etc."),(0,r.kt)("h3",{id:"animationcontrols-destroy"},"destroy()"),(0,r.kt)("p",null,"Clears all memory associated to this animation."),(0,r.kt)("p",null,"Returns ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h3",{id:"animationcontrols-getcontrolvalue"},"getControlValue(controlName)"),(0,r.kt)("p",null,"Retreives current value of a control. This value will not update for each frame\nof an animation. It will only update at the end of each play iteration of an animation."),(0,r.kt)("p",null,"Returns ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("h4",{id:"arguments-4"},"Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"controlName")," ",(0,r.kt)("inlineCode",{parentName:"li"},"string")," name of the control to get value from")),(0,r.kt)("h3",{id:"animationcontrols-onevent"},"onEvent(callback)"),(0,r.kt)("p",null,"Returns ",(0,r.kt)("inlineCode",{parentName:"p"},"Unsubscribe")),(0,r.kt)("h4",{id:"arguments-5"},"Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"callback")," ",(0,r.kt)("inlineCode",{parentName:"li"},"CustomEventCallback")," ")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"type CustomEventCallback = (eventName: string, track: string, time: number): void;\n\n/**\n * Function to call for unsubscribing to an event listener\n **/\ntype Unsubscribe = (): void;\n")),(0,r.kt)("h3",{id:"animationcontrols-ontrackstopped"},"onTrackStopped(callback)"),(0,r.kt)("p",null,"Returns ",(0,r.kt)("inlineCode",{parentName:"p"},"Unsubscribe")),(0,r.kt)("h4",{id:"arguments-6"},"Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"callback")," ",(0,r.kt)("inlineCode",{parentName:"li"},"TrackStoppedCallback")," ")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"type TrackStoppedCallback = (track: string): void;\n\n/**\n * Function to call for unsubscribing to an event listener\n **/\ntype Unsubscribe = (): void;\n")),(0,r.kt)("h3",{id:"animationcontrols-render"},"render()"),(0,r.kt)("p",null,"Render a frame of the image."),(0,r.kt)("p",null,"Returns ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h3",{id:"animationcontrols-setcontrolvalue"},"setControlValue(controlName, value)"),(0,r.kt)("p",null,"Manipulates a control. Will stop animations that are using this control as well."),(0,r.kt)("p",null,"Returns ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"arguments-7"},"Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"controlName")," ",(0,r.kt)("inlineCode",{parentName:"li"},"string")," name of the control to change"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"value")," ",(0,r.kt)("inlineCode",{parentName:"li"},"number")," value to set for control. Take into account that each control can have different\nvalue limits, depending on the amount of step a control has.")),(0,r.kt)("h3",{id:"animationcontrols-setlooping"},"setLooping(loop, trackName)"),(0,r.kt)("p",null,"Set the looping state of an animation track."),(0,r.kt)("p",null,"Returns ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"arguments-8"},"Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"loop")," ",(0,r.kt)("inlineCode",{parentName:"li"},"boolean")," true for looping, false to stop looping."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"trackName")," ",(0,r.kt)("inlineCode",{parentName:"li"},"string")," the name of the animation track to adjust.")),(0,r.kt)("h3",{id:"animationcontrols-setpanning"},"setPanning(panX, panY)"),(0,r.kt)("p",null,"Update the panning of the animation."),(0,r.kt)("p",null,"Returns ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"arguments-9"},"Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"panX")," ",(0,r.kt)("inlineCode",{parentName:"li"},"number")," value of horizontal panning. ",(0,r.kt)("inlineCode",{parentName:"li"},"0")," = center, ",(0,r.kt)("inlineCode",{parentName:"li"},"-1")," = left, ",(0,r.kt)("inlineCode",{parentName:"li"},"1")," = right."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"panY")," ",(0,r.kt)("inlineCode",{parentName:"li"},"number")," value of vertical panning. ",(0,r.kt)("inlineCode",{parentName:"li"},"0")," = center, ",(0,r.kt)("inlineCode",{parentName:"li"},"-1")," = bottom, ",(0,r.kt)("inlineCode",{parentName:"li"},"1")," = top.")),(0,r.kt)("h3",{id:"animationcontrols-setzindex"},"setZIndex(zIndex)"),(0,r.kt)("p",null,"Changes the rendering order of animations."),(0,r.kt)("p",null,"Returns ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"arguments-10"},"Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"zIndex")," ",(0,r.kt)("inlineCode",{parentName:"li"},"number")," The index number for rendering.\nThe higher the number, the more in the front the element will be stacked")),(0,r.kt)("h3",{id:"animationcontrols-setzoom"},"setZoom(zoom)"),(0,r.kt)("p",null,"Updates the zoom level."),(0,r.kt)("p",null,"Returns ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"arguments-11"},"Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"zoom")," ",(0,r.kt)("inlineCode",{parentName:"li"},"number")," ",(0,r.kt)("inlineCode",{parentName:"li"},"1")," = 100%, ",(0,r.kt)("inlineCode",{parentName:"li"},"1.5")," is 150%, ",(0,r.kt)("inlineCode",{parentName:"li"},"0.5")," = 50% zoom.")),(0,r.kt)("h3",{id:"animationcontrols-starttrack"},"startTrack(trackName, ","[options]",")"),(0,r.kt)("p",null,"Start an animation. Conflicting animations will be automatically stopped."),(0,r.kt)("p",null,"Returns ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"arguments-12"},"Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"trackName")," ",(0,r.kt)("inlineCode",{parentName:"li"},"string")," the name of the animation track to start.\nIf the name is not valid, an exception will be thrown\nindicating what animation names are available."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"options")," ",(0,r.kt)("inlineCode",{parentName:"li"},"PlayOptions")," ")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"type PlayOptions = {\n  \n  /**\n   * Playback speed.\n   * @default 1.0\n   **/\n  speed: number;\n  \n  /**\n   * Start animation at given ms.\n   **/\n  startAt: number;\n};\n")),(0,r.kt)("h3",{id:"animationcontrols-stoptrack"},"stopTrack(trackName)"),(0,r.kt)("p",null,"Stop an animation."),(0,r.kt)("p",null,"Returns ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"arguments-13"},"Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"trackName")," ",(0,r.kt)("inlineCode",{parentName:"li"},"string")," the name of the animation track to start.\nIf the name is not valid, an exception will be thrown\nindicating what animation names are available.")))}d.isMDXComponent=!0}}]);